```{r}
#| results: "asis"
#| echo: false

source("_common.R")
load("./data/dat0_0118.RData")  # dat0, spec4matrix

library("kableExtra")
library("circlize")

```

# Overall

As shown in @tbl-summary-dose-group, the summary of dose groups and associated number of subjects is provided. The barplot representation of overall data is visualized in @fig-barplot-overall.

```{r}
#| label: tbl-summary-dose-group
#| tbl-cap: Summary of Dose Groups in Study xxxx
#| tbl-cap-location: top


#install.packages("kableExtra")
library(kableExtra)
library(flextable)
library(knitr)

# dat0 %>% 
# group_by(GROUP, GROUP_f, DOSE_f, SEX_f) %>% 
# dplyr::summarise(N = unique(USUBJID)%>% length())  %>% 
# flextable() %>% 
# merge_v(j=c("GROUP", "GROUP_f", "DOSE_f"))

 
# Summarize data
summary_data <- dat0 %>% 
  group_by(GROUP, GROUP_f, DOSE_f, SEX_f) %>% 
  dplyr::summarise(N = n_distinct(USUBJID)) %>% 
  ungroup()

# Create a flextable with merged cells and zebra striping
ft <- summary_data %>% 
  flextable() %>% 
  merge_v(j = c("GROUP", "GROUP_f", "DOSE_f")) %>% 
  hline(part = "all", border = fp_border(color = "gray"))

# Print the flextable
ft
 
  # knitr::kable() %>% 
  # kableExtra::kable_styling(position = "left")  #%>%  
  # kableExtra::pack_rows(index = summary_data$GROUP) %>% 
  # kableExtra::pack_rows(index = summary_data$GROUP_f) 





```

```{r}
#| label: function-for-barplot
#| echo: false
#| fig-cap: |
#|   Although the input sources dataset can vary, the analysis set of datasets remains relatively stable #|   for conducting subsequent analyses.
#| fig-cap-location: top
#| fig-alt: |
#|   A diagram displaying the derivation of analysis set on which analysis will be conducted.  
#| fig-width: 8
#| fig-height: 15  
 


# my_barplot = function(
#     df,    
#      facet_by = "PARAMCD"
# ) {
  
#   # https://stackoverflow.com/questions/52506296/ggplot-geom-point-position-jitterdodge-not-working-when-color-specified
#   p <-  
#     ggplot(df, aes(x = MATRIXCD, y = AVAL, fill = GROUP_f, group = GROUP_f)) +
#     geom_bar(
#       position = "dodge", width = 0.8, stat = "summary", fun = "mean",
#       color = "black", linewidth = .8
#     ) +
#     scale_fill_manual(values = color.scheme.certara[3:length(color.scheme.certara)]) + # gg_color_hue(n=12)) + 
    
#     # scale_color_discrete( c("gray", "blue", "cyan"), 
#     #                      labels = c("Young Adult", "Older Adult", "sfsf")) +
#     stat_summary(
#       fun.data = mean_sdl, geom = "errorbar", color = "black",
#       position = position_dodge(0.8), width = 0.2, linewidth = 0.8
#     ) +
    
#     #scale_color_manual(values = c("gray", "blue", "cyan", "red", "gray90")) +    # for 0, 1, 2, 3, NA
#     #scale_size_manual(values = c(1, 2, 3, 4, 5)) + 
    
#     scale_y_log10() + 
#     #scale_color_brewer(palette = "Set1") +   # , name = "color_legend_name") +
#     #facet_wrap(~TIME, nrow=2)+ theme_bw() +
    
#     labs(x="", y= "Expression Levels") + # , fill = fill_legend_txt, color= histopah_legend_txt, size=histopah_legend_txt) + 
    
#     theme_prism2() + 
#     theme(legend.position="bottom", legend.box="vertical")  +
#     theme(axis.text.x = element_text(size=10, angle = 45, hjust = 1, vjust=1, face="plain")) +  # 	Font face ("plain", "italic", "bold", "bold.italic")
#     theme(legend.title = element_text())  
  
#   #facet_grid(cols = vars(ARM_f), scales = "free") +
#   #facet_wrap(as.formula(paste("~", cement({{.param}}))), ncol=1, scales="free_y")
   
#    p = p + facet_wrap(as.formula(paste("~", facet_by)), ncol=1, scales="free_y")
#    p
 
   
# }   

```

```{r}
#| label: fig-barplot-overall
#| echo: false
#| fig-cap: |
#|   Barplot of Mean Expression Level in VGC, mRNA, LPA and EVV Across All Biological Matrix in Study xxx.
#| fig-cap-location: top
#| fig-alt: |
#|   A Barplot of Mean Expression Level in VGC, mRNA, LPA and EVV Across All Biological Matrix in Study xxx. 
#| fig-width: 8
#| fig-height: 15  
 
 
###############################################
# Run barplot 
###############################################
 
  PARAMCD_filter = c("VGC_MTH1", "RNA_MTH1", "EVV", "LPA" )

  df = dat0   %>% #filter(!GROUP %in% c(1, 2))
  mutate(AVAL = as.numeric(AVAL))  %>% 
  filter(PARAMCD %in%  PARAMCD_filter)    #  "PK"       "VGC_MTH1" "VGC_MTH2" "RNA_MTH1" "RNA_MTH2" "EVV"      "LPA" 
   
  my_barplot(df, facet_by = "PARAMCD") 

  # my_barplot(
  # df, 
  # facet_by = "PARAMCD")  + 
  #  facet_grid(vars(PARAMCD), vars(TISSUECD), scales="free_x")
  
  # theme(
  #   text = element_text(size = 12),  # Adjust text size
  #   axis.text.x = element_text(size = 10, angle = 45, hjust = 1, vjust = 1),
  #   legend.position = "bottom",
  #   legend.box = "vertical"
  # )


  # my_barplot(
  # df %>% filter(TISSUECD %in% c("BR", "SC", "DRG", "LIV")), 
  # facet_by = "PARAMCD")  + 
  #  facet_grid(vars(PARAMCD), vars(TISSUECD), scales="free_x")
    
# note for all biological matrix
a_matrix_lst <- df %>% #filter(!GROUP %in% c(1, 2))  %>% 
  dplyr::filter(
    PARAMCD %in% PARAMCD_filter    #, ATPT_f %in% ATPT_f_filter
  ) %>%  
  pull(MATRIX)  %>% unique()

abbreviation_of_matrix_lst <- spec4matrix %>%
  dplyr::filter(MATRIX %in% a_matrix_lst) %>% 
  dplyr::arrange(MATRIXCD) %>% 
  tidyr::unite("ABBR", MATRIXCD, MATRIX, sep = " = ") %>% 
  dplyr::pull(ABBR) %>% paste0( collapse="; ")   

```

::: {style="color: gray; font-size: 0.8em;"}
Note, `r abbreviation_of_matrix_lst`.
:::

```{r}
#| label: fig-barplot-key-regions
#| echo: false
#| fig-cap: |
#|   Barplot of Mean Expression Level in VGC, mRNA, LPA and EVV Across All Biological Matrix in Key Tissues in Study xxx.
#| fig-cap-location: top
#| fig-alt: |
#|   A Barplot of Mean Expression Level in VGC, mRNA, LPA and EVV Across Biological Matrix in Key Tissues in Study xxx. 
#| fig-width: 8
#| fig-height: 15  
 
  PARAMCD_filter = c("VGC_MTH1", "RNA_MTH1", "EVV", "LPA" )
  TISSUECD_filter = c("BR", "SC")

  df = dat0   %>% #filter(!GROUP %in% c(1, 2))
  mutate(AVAL = as.numeric(AVAL))  %>% 
  filter(PARAMCD %in%  PARAMCD_filter) %>%   #  "PK"       "VGC_MTH1" "VGC_MTH2" "RNA_MTH1" "RNA_MTH2" "EVV"      "LPA" 
   filter(TISSUECD %in%  TISSUECD_filter)
   

library(ggh4x)   
  
  my_barplot(
    df, 
    facet_by = "PARAMCD")  + 
     facet_grid(vars(PARAMCD), vars(TISSUE), scales="free_x") + 
     labs(fill = "Treatment") + 
     ggh4x::force_panelsizes(cols = c(1, 0.3))  
     
# note for all biological matrix
a_matrix_lst <- df %>% #filter(!GROUP %in% c(1, 2))  %>% 
  dplyr::filter(
    PARAMCD %in% PARAMCD_filter    #, ATPT_f %in% ATPT_f_filter
  ) %>%  
  pull(MATRIX)  %>% unique()

abbreviation_of_matrix_lst <- spec4matrix %>%
  dplyr::filter(MATRIX %in% a_matrix_lst) %>% 
  dplyr::arrange(MATRIXCD) %>% 
  tidyr::unite("ABBR", MATRIXCD, MATRIX, sep = " = ") %>% 
  dplyr::pull(ABBR) %>% paste0( collapse="; ")   

```

::: {style="color: gray; font-size: 0.8em;"}
Note, `r abbreviation_of_matrix_lst`.
:::